/**
 * 
 */
package leetcode.linkedlist.prolems;

/**
 * @author NIPC-43
 *
 *         Date : Jan 19, 2021 Time : 12:29:32 PM
 */
public class AddTwoNumbers extends ScannerInput {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		ListNode l1 = scannerInput();
		ListNode l2 = scannerInput();
		l1 = addTwoNumbers(l1, l2);
		while (l1 != null) {
			System.out.print(l1.val + " ");
			l1 = l1.next;
		}
	}

	/**
	 * @param l1
	 * @param l2
	 * @return
	 */
	private static ListNode addTwoNumbers(ListNode l1, ListNode l2) {
		if (l1 == null) {
			return l2;
		}
		if (l2 == null) {
			return l1;
		}
		l1 = reverseList(l1);
		l2 = reverseList(l2);
		ListNode ans = new ListNode((l1.val + l2.val) % 10);
		int carr = (l1.val + l2.val) / 10;
		ListNode head = ans;
		while (l1 != null && l2 != null) {
			int sum = l1.val + l2.val;
			if (ans == null) {
				ans = new ListNode(sum % 10);
				continue;
			} else if (ans.next != null)
				ans.val += sum % 10;
			else
				ans.next = new ListNode(sum % 10);
			if (sum / 10 != 0) {
				carr = sum / 10;
				ans.next = new ListNode(carr);
			}
			l1 = l1.next;
			l2 = l2.next;
		}
		return head;
	}

	private static ListNode reverseList(ListNode head) {
		ListNode newHead = null;
		while (head != null) {
			ListNode next = head.next;
			head.next = newHead;
			newHead = head;
			head = next;
		}
		return newHead;
	}

}
