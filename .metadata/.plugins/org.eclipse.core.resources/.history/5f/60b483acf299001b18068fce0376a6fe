/**
 * 
 */
package leetcode.binarytrees.problems;

/**
 * @author NIPC-57
 *
 *         Date : 10-Apr-2021 Time : 5:14:04 pm
 */
public class MorrisInorderTraversal extends BinaryTreeUse {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		BinaryTreeNode<Integer> root = takeInputLevelWise();
		printInorderTraversal(root);

	}

	/**
	 * @param root
	 */
	private static void printInorderTraversal(BinaryTreeNode<Integer> root) {
		if (root == null)
			return;

		BinaryTreeNode<Integer> temp = root;
		while (temp != null) {

			if (temp.left == null) {
				System.out.print(temp.data + " ");
				temp = temp.right;
			} else {
				BinaryTreeNode<Integer> curr = temp;
				while (curr.right != null && curr.right != temp) {
					curr = curr.right;
				}
			}

		}
	}

}
