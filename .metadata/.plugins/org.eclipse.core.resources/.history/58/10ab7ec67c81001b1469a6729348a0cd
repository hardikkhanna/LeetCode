/**
 * 
 */
package leetcode.array.problems;

/**
 * @author NIPC-43
 *
 *         Date : Mar 10, 2021 Time : 1:02:14 PM
 */
public class MaximumSumPath extends ScannerInput {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		int[] input1 = get1DArray();
		int[] input2 = get1DArray();
		int path = maximumSumPath(input1, input2);
		System.out.println(path);

	}

	/**
	 * @param input1
	 * @param input2
	 * @return
	 */
	private static int maximumSumPath(int[] arr1, int[] arr2) {
		int i = 0, j = 0;
		int m  =arr1.length;
		int n = arr2.length;
		   int result = 0, sum1 = 0, sum2 = 0;
		   while (i < m && j < n) {
		      if (arr1[i] < arr2[j]) {
		         sum1 += arr1[i++];
		      } else if (arr1[i] > arr2[j]) {
		         sum2 += arr2[j++];
		      } else {
		         result += max(sum1, sum2);
		         sum1 = 0, sum2 = 0;
		         while (i < m && j < n && arr1[i] == arr2[j]) {
		            result = result + arr1[i++];
		            j++;
		         }
		      }
		   }
		   while (i < m) {
		      sum1 += arr1[i++];
		   }
		   while (j < n) {
		      sum2 += arr2[j++];
		   }
		   result += max(sum1, sum2);
		   return result;
	}

}
