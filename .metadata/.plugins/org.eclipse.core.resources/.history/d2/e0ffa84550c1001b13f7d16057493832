/**
 * 
 */
package leetcode.array.problems;

import java.util.Arrays;

/**
 * @author NIPC-57
 *
 *         Date : 30-May-2021 Time : 6:11:17 pm
 */
public class MergeSort2DArray extends ScannerInput {

	/**
	 * @param args
	 */
	public static void main(String[] args) {

		int[][] matrix = get2DArray();
		solve(matrix, 0, matrix.length);
		for (int i = 0; i < matrix.length; i++) {
			for (int j = 0; j < matrix[i].length; j++) {
				System.out.print(matrix[i][j] + " ");
			}
			System.out.println();
		}

	}

	/**
	 * @param matrix
	 */
	private static void solve(int[][] matrix, int , int r) {

		if (l < r) {
			int mid = l + (r - l) / 2;
			sortByColumn(matrix, l, r);
			sortByRow(matrix, l, r);
		}

	}

	/**
	 * @param matrix
	 * @param l
	 * @param r
	 */
	private static void sortByRow(int[][] mat, int l, int r) {
		// Find sizes of two subarrays to be merged
		int n = mat.length;
		for (int i = 0; i < n; i++)
			Arrays.sort(mat[i]);
	}

	/**
	 * @param r 
	 * @param l 
	 * @param matrix
	 */
	private static void sortByColumn(int[][] a, int l, int r) {
		int[][] arr = new int[l][r]

	}

	/**
	 * @param matrix
	 */
	private static void sortByRow(int[][] mat) {
		int n = mat.length;
		for (int i = 0; i < n; i++)
			Arrays.sort(mat[i]);
	}

}
