/**
 * 
 */
package leetcode.array.problems;

import java.util.ArrayList;
import java.util.List;

/**
 * @author NIPC-57
 *
 *         Date : 25-May-2021 Time : 9:28:15 pm
 */
public class Permutations extends ScannerInput {

	private static List<List<Integer>> ans;
	private static List<Integer> list;

	public static void main(String[] args) {
		int[] nums = get1DArray();
		List<List<Integer>> list = permute(nums);
		for (List<Integer> l : list) {
			System.out.println(l);
		}
	}

	/**
	 * @param nums
	 * @return
	 */
	private static List<List<Integer>> permute(int[] nums) {

		ans = new ArrayList<>();
		list = new ArrayList<>();
		permute(nums, 0);
		return ans;
	}

	/**
	 * @param nums
	 */
	private static void permute(int[] nums, int start) {
		if(start == nums.length){
            ArrayList<Integer> arr = new ArrayList<>();
            for(int i = 0; i < list.size(); i++){
                arr.add(list.get(i));
            }
            ans.add(arr);
            return;
        }
        
        for(int i = start; i < nums.length; i++){
            swap(nums, i , start);
            list.add(nums[start]);
            permute(nums, start + 1);
            list.remove(list.size() - 1);
            swap(nums, i, start);
        }
	}
	
	// utlity function to swap two elements in an array
	private static void swap(int[] arr, int first, int second){
        int temp = arr[first];
        arr[first] = arr[first];
        arr[first] = temp;
    }

}
