/**
 * 
 */
package leetcode.binarytrees.problems;

import leetcode.array.problems.ScannerInput;

/**
 * @author NIPC-43
 *
 *         Date : Jan 18, 2021 Time : 1:42:32 PM
 */
public class CreateBinaryTreeFromInorderPreOrder extends ScannerInput {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		int[] inorder = get1DArray();
		int[] preorder = get1DArray();
		BinaryTreeNode<Integer> root = createTree(inorder, preorder);
		new BinaryTreeUse();
		BinaryTreeUse.printTreeLevelWise(root);

	}

	/**
	 * @param inorder
	 * @param preorder
	 * @return
	 */
	private static BinaryTreeNode<Integer> createTree(int[] inorder, int[] preorder) {
		return createTree(inorder, 0, inorder.length - 1, preorder, 0, preorder.length);
	}

	/**
	 * @param inorder
	 * @param i
	 * @param j
	 * @param preorder
	 * @param k
	 * @param length
	 * @return
	 */
	private static BinaryTreeNode<Integer> createTree(int[] inorder, int i, int j, int[] preorder, int k, int length) {
		// TODO Auto-generated method stub
		return null;
	}

}
